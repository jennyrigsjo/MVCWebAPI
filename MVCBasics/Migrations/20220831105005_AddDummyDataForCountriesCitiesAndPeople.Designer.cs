// <auto-generated />
using MVCBasics.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCBasics.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220831105005_AddDummyDataForCountriesCitiesAndPeople")]
    partial class AddDummyDataForCountriesCitiesAndPeople
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVCBasics.Models.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CountryID = 1,
                            Name = "New Asgard"
                        },
                        new
                        {
                            ID = 2,
                            CountryID = 1,
                            Name = "Jotunheim"
                        },
                        new
                        {
                            ID = 3,
                            CountryID = 2,
                            Name = "New York"
                        },
                        new
                        {
                            ID = 4,
                            CountryID = 2,
                            Name = "Westview"
                        },
                        new
                        {
                            ID = 5,
                            CountryID = 3,
                            Name = "Stockholm"
                        },
                        new
                        {
                            ID = 6,
                            CountryID = 3,
                            Name = "Alingsås"
                        });
                });

            modelBuilder.Entity("MVCBasics.Models.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Norway"
                        },
                        new
                        {
                            ID = 2,
                            Name = "USA"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Sweden"
                        });
                });

            modelBuilder.Entity("MVCBasics.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CityID = 1,
                            Name = "Thor Odinson",
                            Phone = "0123 456789"
                        },
                        new
                        {
                            ID = 2,
                            CityID = 1,
                            Name = "Valkyrie",
                            Phone = "0123 456789"
                        },
                        new
                        {
                            ID = 3,
                            CityID = 1,
                            Name = "Sif",
                            Phone = "7777 777777"
                        },
                        new
                        {
                            ID = 4,
                            CityID = 2,
                            Name = "Loki Odinson",
                            Phone = "1234 567890"
                        },
                        new
                        {
                            ID = 5,
                            CityID = 2,
                            Name = "Sylvie Laufeysdottir",
                            Phone = "0000 000000"
                        },
                        new
                        {
                            ID = 6,
                            CityID = 3,
                            Name = "Jane Foster",
                            Phone = "2345 678901"
                        },
                        new
                        {
                            ID = 7,
                            CityID = 3,
                            Name = "Tony Stark",
                            Phone = "9999 999999"
                        },
                        new
                        {
                            ID = 8,
                            CityID = 3,
                            Name = "Nick Fury",
                            Phone = "8888 888888"
                        },
                        new
                        {
                            ID = 9,
                            CityID = 3,
                            Name = "Natasha Romanoff",
                            Phone = "8888 888888"
                        },
                        new
                        {
                            ID = 10,
                            CityID = 4,
                            Name = "Darcy Lewis",
                            Phone = "3456 789012"
                        },
                        new
                        {
                            ID = 11,
                            CityID = 4,
                            Name = "Wanda Maximoff",
                            Phone = "5555 555555"
                        },
                        new
                        {
                            ID = 12,
                            CityID = 4,
                            Name = "Vision",
                            Phone = "5555 555555"
                        },
                        new
                        {
                            ID = 13,
                            CityID = 5,
                            Name = "Erik Selvig",
                            Phone = "4567 890123"
                        },
                        new
                        {
                            ID = 14,
                            CityID = 6,
                            Name = "Jenny Rigsjö",
                            Phone = "0763 446373"
                        });
                });

            modelBuilder.Entity("MVCBasics.Models.City", b =>
                {
                    b.HasOne("MVCBasics.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MVCBasics.Models.Person", b =>
                {
                    b.HasOne("MVCBasics.Models.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("MVCBasics.Models.City", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("MVCBasics.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
